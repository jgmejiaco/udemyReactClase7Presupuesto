{"version":3,"sources":["components/Error/error.jsx","components/Pregunta/pregunta.jsx","components/Formulario/formulario.jsx","components/Gasto/gasto.jsx","components/Listado/listado.jsx","helpers.js","components/ControlPresupuesto/controlPresupuesto.jsx","App.js","reportWebVitals.js","index.js"],"names":["Error","mensaje","className","Pregunta","guardarPresupuesto","guardarRestante","actualizarPregunta","useState","cantidad","guardarCantidad","error","guardarError","action","onSubmit","e","preventDefault","isNaN","type","placeholder","onChange","parseInt","target","value","Formulario","guardarGasto","guardarCrearGasto","nombregasto","guardarNombreGasto","trim","gasto","id","shortid","generate","console","log","htmlFor","Gasto","Listado","gastos","map","revisarPresupuesto","presupuesto","restante","ControlPresupuesto","App","mostarpregunta","guardarGastos","creargasto","useEffect","presupuestoRestante","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e78cd36a.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Error = ({mensaje}) => (\r\n    <p className=\"alert alert-danger error\">{mensaje}</p>\r\n    // <p className=\"alert alert-danger error\">Hubo un error</p>\r\n); \r\nError.propTypes = {\r\n    mensaje: PropTypes.string.isRequired\r\n}\r\nexport default Error;","import React, {Fragment, useState} from 'react';\r\nimport Error from '../Error/error';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Pregunta = ({guardarPresupuesto, guardarRestante, actualizarPregunta}) => {\r\n    \r\n    //  Definir State\r\n    const [cantidad, guardarCantidad] = useState(0);\r\n    const [error, guardarError] = useState(false);\r\n  \r\n    //  Función que lee el presupuesto\r\n    const definirPresupuesto = e => {\r\n        guardarCantidad(parseInt(e.target.value,10));\r\n    }\r\n\r\n    //  Submit para definir el presupuesto\r\n    const agregarPresupuesto = e => {\r\n        e.preventDefault(); // Evita cargar la página  y enviar datos en la URL\r\n\r\n        //  Validar\r\n        if(cantidad < 1 || isNaN(cantidad)) {\r\n            guardarError(true);\r\n            return;\r\n        }\r\n\r\n        //  Si se pasa la validación\r\n        guardarError(false);\r\n        guardarPresupuesto(cantidad);\r\n        guardarRestante(cantidad);\r\n        actualizarPregunta(false);\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <h2>Ingresa tu presupuesto</h2>\r\n\r\n            {/* El operador condicional (ternario) usa como atajo para la instrucción if*/}\r\n            {error ? <Error mensaje=\"Presupuesto incorrecto\"/> : null}\r\n\r\n            <form action=\"\" onSubmit={agregarPresupuesto}>\r\n                <input\r\n                    type=\"number\"\r\n                    className=\"u-full-width\"\r\n                    placeholder=\"Ingresa tu presupuesto\"\r\n                    onChange={definirPresupuesto}\r\n                />\r\n\r\n               <input\r\n                    type=\"submit\"\r\n                    className=\"button-primary u-full-width\"\r\n                    value=\"Definir presupuesto\"\r\n                /> \r\n            </form>\r\n        </Fragment>\r\n    );\r\n}\r\nPregunta.propTypes = {\r\n    guardarPresupuesto: PropTypes.func.isRequired,\r\n    guardarRestante: PropTypes.func.isRequired,\r\n    actualizarPregunta: PropTypes.func.isRequired\r\n}\r\nexport default Pregunta;","import React, {useState} from 'react';\r\nimport Error from '../Error/error';\r\nimport shortid from 'shortid';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Formulario = ({guardarGasto, guardarCrearGasto}) => {\r\n\r\n    //  Definir useSate para mostrar el gasto y el saldo\r\n    const [nombregasto, guardarNombreGasto] =  useState('');\r\n    const [cantidad, guardarCantidad] =  useState(0);\r\n    const [error, guardarError] =  useState(false);\r\n\r\n    //  Cuando agregamos el gasto\r\n    const agregarGasto = e => {\r\n        e.preventDefault();\r\n\r\n        // validar\r\n        if(cantidad < 1 || isNaN(cantidad) || nombregasto.trim() === '') {\r\n            guardarError(true);\r\n            return;\r\n        }\r\n        guardarError(false);\r\n\r\n        // construir el gasto\r\n        const gasto = {\r\n            nombregasto,\r\n            cantidad,\r\n            id: shortid.generate()\r\n        }\r\n        console.log(gasto);\r\n\r\n        // pasar el gasto al componente ppal\r\n        guardarGasto(gasto);\r\n        guardarCrearGasto(true);\r\n\r\n        // resetaer el form\r\n        guardarNombreGasto('');\r\n        guardarCantidad(0);\r\n    }\r\n\r\n    return ( \r\n        <form onSubmit={agregarGasto}>\r\n            <h2>Agrega tus gastos</h2>\r\n\r\n            {error ? <Error mensaje=\"Ambos campos son obligatorios\"/> : null}\r\n\r\n            <div className=\"campo\">\r\n                <label htmlFor=\"\">Nombre gasto</label>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"u-full-with\"\r\n                    placeholder=\"Ej. Transporte\"\r\n                    value={nombregasto}\r\n                    onChange={e => guardarNombreGasto(e.target.value)}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"campo\">\r\n                <label htmlFor=\"\">Cantidad gasto</label>\r\n                <input\r\n                    type=\"number\"\r\n                    className=\"u-full-with\"\r\n                    placeholder=\"Ej. 300\"\r\n                    value={cantidad}\r\n                    onChange={e => guardarCantidad(parseInt(e.target.value))}\r\n                />\r\n            </div>\r\n\r\n            <input\r\n                type=\"submit\"\r\n                className=\"button-primary u-full-width\"\r\n                value=\"Agregar gasto\"\r\n            /> \r\n        </form>\r\n     );\r\n}\r\nFormulario.propTypes = {\r\n    guardarGasto: PropTypes.func.isRequired,\r\n    guardarCrearGasto: PropTypes.func.isRequired\r\n}\r\n \r\nexport default Formulario;","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\n//  Se deja implícito el return por medio de los paréntesis porque no se realizará ninguna operación, solo se mostrará el contenido HTML\r\nconst Gasto = ({gasto}) => (\r\n    <li className=\"gastos\">\r\n        <p>\r\n            {gasto.nombregasto}\r\n            <span className=\"gasto\">${gasto.cantidad}</span>\r\n        </p>\r\n    </li>\r\n);\r\nGasto.propTypes = {\r\n    gasto: PropTypes.object.isRequired\r\n}\r\nexport default Gasto;","import React from 'react';\r\nimport Gasto from '../Gasto/gasto';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Listado = ({gastos}) => (\r\n    <div className=\"gastos-realizados\">\r\n        <h2>Listado</h2>\r\n        {gastos.map(gasto => (\r\n            <Gasto\r\n                key={gasto.id}\r\n                gasto={gasto}\r\n            />\r\n        ))}\r\n    </div>\r\n);\r\nListado.propTypes = {\r\n    gastos: PropTypes.array.isRequired\r\n}\r\nexport default Listado;","export const revisarPresupuesto = (presupuesto, restante) => {\r\n    let clase;\r\n\r\n    if((presupuesto / 4) > restante) {\r\n        clase = 'alert alert-danger';\r\n    } else if ((presupuesto / 2) > restante) {\r\n        clase = 'alert alert-warning';\r\n    } else {\r\n        clase = 'alert alert-success';\r\n    }\r\n    return clase;\r\n}","import React, {Fragment} from 'react';\r\nimport {revisarPresupuesto} from '../../helpers';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ControlPresupuesto = ({presupuesto, restante}) => {\r\n    return ( \r\n        <Fragment>\r\n            <div className=\"alert alert-primary\">\r\n                Presupuesto: $ {presupuesto}\r\n            </div>\r\n\r\n            <div className={revisarPresupuesto(presupuesto, restante)}>\r\n                Restante: $ {restante}\r\n            </div>\r\n        </Fragment>\r\n     );\r\n}\r\nControlPresupuesto.propTypes = {\r\n    presupuesto: PropTypes.number.isRequired,\r\n    restante: PropTypes.number.isRequired\r\n}\r\nexport default ControlPresupuesto;\r\n","import React, {Fragment, useState, useEffect} from 'react';\nimport Pregunta from './components/Pregunta/pregunta';\nimport Formulario from './components/Formulario/formulario';\nimport Listado from './components/Listado/listado';\nimport ControlPresupuesto from './components/ControlPresupuesto/controlPresupuesto';\n\nfunction App() {\n\n  //  Definir States\n  const [presupuesto, guardarPresupuesto] = useState(0);\n  const [restante, guardarRestante] = useState(0);\n  const [mostarpregunta, actualizarPregunta] = useState(true);\n  const [gastos, guardarGastos] = useState([]);\n  const [gasto, guardarGasto] = useState([]);\n  const [creargasto, guardarCrearGasto] = useState(false);\n\n  // UseEffect que actualiza el restante\n  useEffect(() => {\n    if(creargasto) {\n\n      // agrega el nuevo presupuesto\n      guardarGastos([ ...gastos, gasto ])\n\n      // Resta del presupuesto actual\n      const presupuestoRestante = restante - gasto.cantidad;\n      guardarRestante(presupuestoRestante);\n\n      // REsetear a false\n      guardarCrearGasto(false);\n    }\n  }, [gasto, creargasto, gastos, restante]);\n\n  return (\n    <Fragment>\n      <div className=\"container\">\n        <header className=\"\">\n          <h1>Gasto Semanal</h1>\n\n          <div className=\"contenido-principal contenido\">\n            {mostarpregunta ? (\n                <Pregunta\n                  guardarPresupuesto={guardarPresupuesto}\n                  guardarRestante={guardarRestante}\n                  actualizarPregunta={actualizarPregunta}\n                />\n              ) : (\n                <div className=\"row\">\n                  <div className=\"one-half column\">\n                    <Formulario\n                      guardarGasto={guardarGasto}\n                      guardarCrearGasto={guardarCrearGasto}\n                    />             \n                  </div>\n\n                  <div className=\"one-half column\">\n                    <Listado gastos={gastos} />        \n\n                    <ControlPresupuesto\n                      presupuesto={presupuesto}\n                      restante={restante}\n                    />      \n                  </div>\n                </div>\n              )\n            }\n            \n\n            \n          </div>\n        </header>\n      </div>\n    </Fragment>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}